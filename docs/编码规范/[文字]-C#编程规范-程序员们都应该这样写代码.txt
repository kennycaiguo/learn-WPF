C#编程规范-程序员们都应该这样写代码
                          -落叶夏日
为了保证大家使用C#编程和C++的风格的连贯,我在C++的标准备上对C#编程规则作了制定(试用版),在这里感谢大家的支持,特别是Stone Jiang. 
基本要求
1程序结构要求
1.1 程序结构清晰，简单易懂，单个函数的程序行数不得超过100行。
1.2 打算干什么，要简单，直接了当，代码精简，避免垃圾程序。
1.3 尽量使用.NET库函数和公共函数(无特殊情况不要使用外部方法调用windows的核心动态链接库)。
1.4 不要随意定义全局变量，尽量使用局部变量。
2.可读性要求
2.1 可读性第一，效率第二(代码是给人读的J)。
2.2 保持注释与代码完全一致。
2.3 每个源程序文件，都有文件头说明，说明规格见规范。
2.4 每个函数，都有函数头说明，说明规格见规范。
2.5 主要变量（结构、联合、类或对象）定义或引用时，注释能反映其含义。
2.6 处理过程的每个阶段都有相关注释说明。
2.7 在典型算法前都有注释, 同时算法在满足要求的情况下尽可能简单。
2.8 利用缩进来显示程序的逻辑结构，缩进量一致并以Tab键为单位，定义Tab为 6个
字节。
2.9 循环、分支层次不要超过五层。
2.10 注释可以与语句在同一行，也可以在上行。
2.11 空行和空白字符也是一种特殊注释。
2.12 一目了然的语句不加注释。
2.13 注释的作用范围可以为：定义、引用、条件分支以及一段代码。
2.14 注释行数（不包括程序头和函数头说明部份）应占总行数的 1/5 到 1/3
2.15 常量定义（DEFINE）有相应说明。
 
3. 结构化要求

3.1 禁止出现两条等价的支路。
3.2 禁止GOTO语句。
3.3 用 IF 语句来强调只执行两组语句中的一组。禁止 ELSE GOTO 和 ELSE RETURN。
3.4 用 CASE 实现多路分支。
3.5 避免从循环引出多个出口。
3.6 函数只有一个出口。
3.7 不使用条件赋值语句。
3.8 避免不必要的分支。
3.9 不要轻易用条件分支去替换逻辑表达式。
 
4. 正确性与容错性要求

4.1 程序首先是正确，其次是优美
4.2 无法证明你的程序没有错误，因此在编写完一段程序后，应先回头检查。
4.3 改一个错误时可能产生新的错误，因此在修改前首先考虑对其它程序的影响。
4.4 所有变量在调用前必须被初始化。
4.5 对所有的用户输入，必须进行合法性检查。
4.6 不要比较浮点数的相等，
如： 10.0 * 0.1 == 1.0 ， 不可靠
4.7 程序与环境或状态发生关系时，必须主动去处理发生的意外事件，如文件能否
逻辑锁定、打印机是否联机等,对于明确的错误,要有明确的容错代码提示用户。
4.8 单元测试也是编程的一部份，提交联调测试的程序必须通过单元测试。
4.9 尽量使用规范的容错语句.
  例如:
try
{
}
catch
{
}
finally
{
}
5. 可重用性要求

5.1 重复使用的完成相对独立功能的算法或代码应抽象为asp.net服务或类。
5.2asp.net服务或类应考虑OO思想，减少外界联系，考虑独立性或封装性。
 
附：C#编程规范
1适用范围

本标准适用于利用Visul C# ,其余语言作参考.。
2变量命名

命名必须具有一定的实际意义,形式为xAbcFgh,x由变量类型确定,Abc、Fgh表示连续意
义字符串,如果连续意义字符串仅两个,可都大写.如OK.
具体例程:

BOOL类型    bEnable;
sz   char     szText
sb   sbyte     sbText
bt    byte     btText
n     int      nText
ui    uint      uiText
l     long     lText
ul    ulong    ulText
f     float     fText
d    double    dText
b    bool      bText
de   decimal   deText
str   string     strText
x,y 坐标
att   表属性
m_ 类成员变量 m_nVal, m_bFlag
s_  类静态成员变量 s_nVal,s_bFlag
//不提议用全局变量,其于类的实例,尽量选取表示该类特性的字母,例如classText,class体现类的特性.
3常量命名和宏定义

常量和宏定义必须具有一定的实际意义;

常量和宏定义在#include和函数定义之间;

常量和宏定义必须全部以大写字母来撰写,中间可根据意义的连续性用下划线连接,每一
条定义的右侧必须有一简单的注释,说明其作用;
4资源名字定义格式(我对.NET的资源还没有了解的多),只写几个:
菜单:IDM_XX或者CM_XX
位图:IDB_XX
对话框:IDD_XX
字符串:IDS_XX
DLGINIT:DIALOG_XX
ICON:IDR_XX
5函数命名和命名空间,类的命名,接口的命名
函数原型说明包括引用外来函数及内部函数，外部引用必须在右侧注明函数来源： 模
块名及文件名, 如是内部函数，只要注释其定义文件名;
第一个字母必须使用大写字母,要求用大小写字母组合规范函数命名,必要时可用下划线
间隔,示例如下：
void PrintTrackData ( );
void ShowChar (int , int ,char);
事件函数的命名:
   void EventH(object sd,Event e)  //Event 表示事件响应的函数.
接口的命名
   接口的命名一般都以’I’作为首字母,为了和类区分,例如:
     interface IA  
命名空间(例如 namespace A)和类的命名规则从原则上和函数命名相同.
 
6结构体命名
结构体类型命名必须全部用大写字母,原则上前面以下划线开始;结构体变量命名必须用
大小写字母组合，第一个字母必须使用大写字母,必要时可用下划线间隔。对于私有数
据区，必须注明其所属的进程。全局数据定义只需注意其用途。

示例如下：
typedef struct
{
char szProductName[20];
char szAuthor[20];
char szReleaseDate[16];
char szVersion[10]; 
unsigned long MaxTables;
unsigned long UsedTables;
}DBS_DATABASE;
DBS_DATABASE GdataBase;
7 控件的命名：
C#控件规则为了和.net类库统一,分WindowsForm程序和Web程序(也许大家不是很习惯J).
WindowsForm程序
   用小写前缀表示类别
        fm 窗口
cmd 按钮
cob combo，下拉式列表框
txt 文本输入框
lab labal，标签
img image，图象
pic picture
grd Grid，网格
scr 滚动条
lst 列表框
frm fram
Web程序
   用大写前缀表示类别
        Fm 窗口
Cmd 按钮
Cob combo，下拉式列表框
Txt 文本输入框
Lab labal，标签
Img image，图象
Pic picture
Grd Grid，网格
Scr 滚动条
Lst 列表框
Frm fram
8注释

原则上注释要求使用中文;
文件开始注释内容包括:公司名称、版权、作者名称、时间、模块用途、背景介绍等,复
杂的算法需要加上流程说明;
函数注释包括:输入、输出、函数描述、流程处理、全局变量、调用样例等,复杂的函数
需要加上变量用途说明;
程序中注释包括:修改时间和作者、方便理解的注释等;
引用一: 文件开头的注释模板
/******************************************************************
** 文件名:
** Copyright (c) 1998-1999 *********公司技术开发部
** 创建人:
** 日 期:
** 修改人:
** 日 期:
** 描 述:
**
** 版 本:
**----------------------------------------------------------------------------
******************************************************************/

引用二: 函数开头的注释模板
/*****************************************************************
** 函数名:
** 输 入: a,b,c
** a---
** b---
** c---
** 输 出: x---
** x 为 1, 表示...
** x 为 0, 表示...
** 功能描述:
** 全局变量:
** 调用模块:
** 作 者:
** 日 期:
** 修 改:
** 日 期:
** 版本
****************************************************************/
引用三: 程序中的注释模板
/*----------------------------------------------------------*/
/* 注释内容 */
/*----------------------------------------------------------*/
9 程序
a. 程序编码力求简洁，结构清晰，避免太多的分支结构及太过于技巧性的程序，
尽量不采用递归模式。
b. 编写程序时，亦必须想好测试的方法，换句话说，”单元测试” 的测试方案应
在程序编写时一并拟好。
c. 注释一定要与程序一致。
d. 版本封存以后的修改一定要将老语句用/* */ 封闭，不能自行删除或修改,并要
在文件及函数的修改记录中加以记录。
e. 程序中每个block 的开头 ”{" 及 "}” 必须对齐，嵌套的block 每进一套，
缩进一个tab，TAB 为4个空格,block类型包括if、for、while、do等关键字引出的。
f. 对于比较大的函数，每个block 和特殊的函数调用，都必须注明其功能.
 
