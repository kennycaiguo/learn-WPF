wpf中，容器控件可以包含任意多个子元素，但是内容控件只能包含一个子元素。
常见内容控件有：Button，Label，Window类也是内容控件
内容控件常见属性： 

Content属性，如btn.Content="hello";

对齐内容:通过 控件.HorizontalContentAlignment和控件.VerticalContentAlignment
来设置水平和垂直对齐。

标签，就是可以将一个文本框绑定到一个Label控件：
xaml的写法：
 <StackPanel>
            <Label Target="{Binding ElementName=txb}" FontSize="18">Choose _A</Label><!-- _A表示当用户按下alt+a时，焦点转到文本框-->
            <TextBox Name="txb" FontSize="18"></TextBox>
            <Button x:Name="btn"  Width="100" Height="40" FontFamily="Ariel" FontSize="18" FontStyle="Oblique" Content="hello"/>
            <TextBlock Name="tb" Margin="5"  FontSize="18" TextDecorations="UnderLine">列出系统字体：</TextBlock>
            <ListBox Name="lstFont" Height="207" Margin="0,0,-0.333,0"/>
 </StackPanel>
   

按钮：wpf提供了3种类型的按钮控件：Button，CheckBox，RadioButton控件
Button除了一般我们理解的属性外，还有两个属性：isCancel，isDefault
如果一个按钮的isCancel属性设置为True，它就可以当作取消按钮来用，可以通过按esc键触发
但是还是要添加事件处理代码。如果一个按钮的isDefault属性设置为True，它就可以当作默认按钮来用
，按下enter键就会触发这个按钮的事件。
CheckBox是多选按钮它的常用属性：IsChecked="{x:Null}" IsThreeState="True"
如果 IsThreeState="True"，CheckBox就有三种状态，没有选中，不确定和选中
否则就只有选中和没有选中两种状态。RadioButton一般都是两个以上出现的它的。
RadioButton是单选按钮，同一个容器中的RadioButton具有排他性。如果两个RadioButton
不在同一个容器中，必须将他们的GroupName设置为一样才能具有排他性。
常见属性跟CheckBook类似：IsChecked="{x:Null}" IsThreeState="True"
如果 IsThreeState="True"，CheckBox就有三种状态，没有选中，不确定和选中
否则就只有选中和没有选中两种状态。

工具提示：只要能放在wpf窗口中的元素都可以设置tooltip属性。
如：方式1.<TextBox Name="txb" ToolTip="TextBox that is binded to a Label Element" FontSize="18"></TextBox>
这样子只要鼠标停留在编辑框在就会显示上面的提示。还可以将tooltip嵌套到元素里面。
    方式2.
      <Button x:Name="btn" IsCancel="True" IsDefault="True" Width="100" Height="40" FontFamily="Ariel" FontSize="18" FontStyle="Oblique"  Click="btn_Click">
                <Button.ToolTip>Default button</Button.ToolTip>
                <Button.Content>Hello</Button.Content>
      </Button>
方式3.比较复杂，可以包含图片的tooltip
    <Button x:Name="btn" IsCancel="True" IsDefault="True" Width="100" Height="40" FontFamily="Ariel" FontSize="18" FontStyle="Oblique"  Click="btn_Click">
                <Button.ToolTip>
                    <StackPanel>
                        <TextBlock>Default and Cancel Button</TextBlock>
                        <Image Source="D:\pic\img\icon-customer-normal.png"></Image>
                    </StackPanel>
                </Button.ToolTip>
                <Button.Content>Hello</Button.Content>
            </Button>
方式4.更复杂，可以为tooltip添加背景颜色：

       <Button x:Name="btn" IsCancel="True" IsDefault="True" Width="100" Height="40" FontFamily="Ariel" FontSize="18" FontStyle="Oblique"  Click="btn_Click">
                <Button.ToolTip>
                    <ToolTip Background="Chartreuse">
                    <StackPanel>
                        <TextBlock>Default and Cancel Button</TextBlock>
                        <Image Source="D:\pic\img\icon-customer-normal.png"></Image>
                    </StackPanel>
                    </ToolTip>
                </Button.ToolTip>
                <Button.Content>Hello</Button.Content>
         </Button>
方式5.更复杂，可以为tooltip设置水平偏移量：
        <Button x:Name="btn" IsCancel="True" IsDefault="True" Width="100" Height="40" FontFamily="Ariel" FontSize="18" FontStyle="Oblique"  Click="btn_Click">
                <Button.ToolTip>
                    <ToolTip Background="Chartreuse" Placement="Mouse" HorizontalOffset="5">
                    <StackPanel>
                        <TextBlock>Default and Cancel Button</TextBlock>
                        <Image Source="D:\pic\img\icon-customer-normal.png"></Image>
                    </StackPanel>
                    </ToolTip>
                </Button.ToolTip>
                <Button.Content>Hello</Button.Content>
         </Button>

Popup控件，它和Tooltip控件类似，也是只能包含一个元素。
Popup控件默认在工具箱不显示，需要在工具箱点击右击，选中“选择项”，
稍等一会，在出现的界面在滚动到Popup，并且勾选，点击确定就可见了。
